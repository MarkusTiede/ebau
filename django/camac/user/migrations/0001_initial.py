# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-12 11:30
from __future__ import unicode_literals

import camac.user.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_auto_20180112_1130'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='USER_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='USERNAME', max_length=250, unique=True)),
                ('password', models.CharField(blank=True, db_column='PASSWORD', max_length=50, null=True)),
                ('name', models.CharField(db_column='NAME', max_length=100)),
                ('surname', models.CharField(db_column='SURNAME', max_length=100)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, db_column='PHONE', max_length=100, null=True)),
                ('disabled', models.PositiveSmallIntegerField(db_column='DISABLED', default=0)),
                ('language', models.CharField(db_column='LANGUAGE', max_length=2)),
                ('last_login', models.DateTimeField(blank=True, db_column='LAST_REQUEST_DATE', null=True)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=100, null=True)),
                ('zip', models.CharField(blank=True, db_column='ZIP', max_length=10, null=True)),
            ],
            options={
                'db_table': 'USER',
                'managed': True,
            },
            managers=[
                ('objects', camac.user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(db_column='GROUP_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=100)),
                ('phone', models.CharField(blank=True, db_column='PHONE', max_length=100, null=True)),
                ('zip', models.CharField(blank=True, db_column='ZIP', max_length=10, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=100, null=True)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=100, null=True)),
                ('website', models.CharField(blank=True, db_column='WEBSITE', max_length=1000, null=True)),
                ('role', models.ForeignKey(db_column='ROLE_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Role')),
                ('service', models.ForeignKey(blank=True, db_column='SERVICE_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Service')),
            ],
            options={
                'db_table': 'GROUP',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupLocation',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='GROUP_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.Group')),
                ('location', models.ForeignKey(db_column='LOCATION_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Location')),
            ],
            options={
                'db_table': 'GROUP_LOCATION',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('default_group', models.PositiveSmallIntegerField(db_column='DEFAULT_GROUP')),
                ('group', models.ForeignKey(db_column='GROUP_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.Group')),
                ('user', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'USER_GROUP',
                'managed': True,
            },
        ),
        migrations.AlterUniqueTogether(
            name='usergroup',
            unique_together=set([('user', 'group')]),
        ),
        migrations.AlterUniqueTogether(
            name='grouplocation',
            unique_together=set([('group', 'location')]),
        ),
    ]
