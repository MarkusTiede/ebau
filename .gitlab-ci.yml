---
image: tmaier/docker-compose:latest

variables:
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  COMPOSE: docker-compose -f compose/ci.yml
  APPLICATION: demo
  COMPOSE_HTTP_TIMEOUT: 300

before_script:
  - mkdir /root/.docker
  - echo "$RUNNER_DOCKER_CAPEM" > /root/.docker/ca.pem
  - echo "$RUNNER_DOCKER_CERTPEM" > /root/.docker/cert.pem
  - echo "$RUNNER_DOCKER_KEYPEM" > /root/.docker/key.pem

stages:
  - lint
  - test
  - build
  - deploy

lint-yml:
  stage: lint
  image: node:lts
  before_script:
    - yarn global add prettier
  script:
    - prettier -c *.yml
  only:
    refs:
      - master
      - merge_requests
    changes:
      - "*.yml"

lint-ember-camac-ng:
  stage: lint
  image: node:lts
  before_script:
    - cd ember-camac-ng
    - yarn
  script:
    - yarn lint
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember-camac-ng/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

lint-ember-caluma-portal:
  stage: lint
  image: node:lts
  before_script:
    - cd ember-caluma-portal
    - yarn
  script:
    - yarn lint
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember-caluma-portal/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

lint-ember-ebau-core:
  stage: lint
  image: node:lts
  before_script:
    - cd ember-ebau-core
    - yarn
  script:
    - yarn lint
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember-ebau-core/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

# TODO: This needs to reconfigured so it also works with kt_uri and kt_schwyz (See package.json).
lint-php:
  stage: lint
  image:
    name: node:lts
  script:
    - if git grep -I -e ä  -e ö  -e ü   -- './*' ':!.gitlab-ci.yml'; then exit 1; else echo "No composite umlaute found"; fi
    - yarn --cwd=php install
    - yarn --cwd=php lint
    - yarn --cwd=php prettier-check
  only:
    refs:
      - master
      - merge_requests
    changes:
      - php/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

test-ember:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - sh -c "export CI_COMMIT_REF_SLUG=master; eval $COMPOSE pull --ignore-pull-failures --quiet ember"
    - eval $COMPOSE build --pull ember
    - eval $COMPOSE run --rm --no-deps ember yarn test
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

test-ember-camac-ng:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - sh -c "export CI_COMMIT_REF_SLUG=master; eval $COMPOSE pull --ignore-pull-failures --quiet ember-camac-ng"
    - eval $COMPOSE build --pull ember-camac-ng
    - eval $COMPOSE run --rm --no-deps ember-camac-ng yarn test:ember
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember-camac-ng/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

test-ember-caluma-portal:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - sh -c "export CI_COMMIT_REF_SLUG=master; eval $COMPOSE pull --ignore-pull-failures --quiet ember-caluma-portal"
    - eval $COMPOSE build --pull ember-caluma-portal
    - eval $COMPOSE run --rm --no-deps -e APPLICATION=kt_bern ember-caluma-portal yarn test:ember
    - eval $COMPOSE run --rm --no-deps -e APPLICATION=kt_uri ember-caluma-portal yarn test:ember
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember-caluma-portal/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

test-ember-ebau-core:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - sh -c "export CI_COMMIT_REF_SLUG=master; eval $COMPOSE pull --ignore-pull-failures --quiet ember-caluma-portal"
    - eval $COMPOSE build --pull ember-ebau-core
    - eval $COMPOSE run --rm --no-deps ember-ebau-core yarn test:ember-compatibility
  only:
    refs:
      - master
      - merge_requests
    changes:
      - ember-ebau-core/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

test-django:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - sh -c "export CI_COMMIT_REF_SLUG=master; eval $COMPOSE pull --ignore-pull-failures --quiet django db"
    - eval $COMPOSE up -d --build db clamav unoconv
    - eval $COMPOSE build --pull django
    - eval $COMPOSE run --rm --no-deps django make install-dev test
  only:
    refs:
      - master
      - merge_requests
    changes:
      - django/**/*
      - compose/ci.yml
      - .gitlab-ci.yml

php-security-checker:
  stage: test
  image:
    name: jakzal/phpqa:php7.3-alpine
  script: local-php-security-checker --path=./php/composer.lock
  only:
    refs:
      - master
      - merge_requests
    changes:
      - php/**/*
      - .gitlab-ci.yml

.build-image:
  stage: build
  variables:
    CONTAINERS: ember django php db
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - eval $COMPOSE pull --ignore-pull-failures --quiet $CONTAINERS
    - eval $COMPOSE build --pull
    - eval $COMPOSE push

build:
  extends: .build-image
  only:
    - master

build-kt_schwyz-stage:
  extends: .build-image
  variables:
    KEYCLOAK_URL: https://camac-schwyz.sycloud.ch/auth/realms/ebau/protocol/openid-connect
    APPLICATION: kt_schwyz
    COMPOSE: docker-compose -f compose/kt_schwyz.yml -f compose/kt_schwyz-stage.yml
  only:
    - stage-sz

build-kt_schwyz-production:
  extends: .build-image
  variables:
    KEYCLOAK_URL: https://ebau-sz.ch/auth/realms/ebau/protocol/openid-connect
    APPLICATION: kt_schwyz
    # TODO We should make kt_schwyz-prod.yml base on kt_schwyz.yml
    COMPOSE: docker-compose -f compose/kt_schwyz-prod.yml
    CONTAINERS: ember ember-camac-ng django php
  only:
    - production-sz

.build-image-ur:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - eval $COMPOSE pull --ignore-pull-failures --quiet $CONTAINERS
    - eval $COMPOSE build --pull
    - eval $COMPOSE push

build-kt_uri-stage:
  extends: .build-image-ur
  variables:
    KEYCLOAK_HOST: https://camac-uri.sycloud.ch
    APPLICATION: kt_uri
    COMPOSE: docker-compose -f compose/kt_uri.yml -f compose/kt_uri-stage.yml
  only:
    - stage-ur

build-kt_uri-production:
  extends: .build-image-ur
  variables:
    KEYCLOAK_HOST: https://camac.ur.ch
    APPLICATION: kt_uri
    COMPOSE: docker-compose -f compose/kt_uri.yml -f compose/kt_uri-prod.yml
  only:
    - production-ur

# Create a minimal tarball which is deployable by
# https://github.com/camac-suisse/ansible-role-camac
.build-tarball:
  stage: build
  services:
    - docker:dind
  script:
    # pull and build needed containers: php, ember-caluma-portal and document-merge-service (with db)
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - eval $COMPOSE pull --ignore-pull-failures --quiet php ember-caluma-portal ember-camac-ng document-merge-service
    - eval $COMPOSE build --pull
    - eval $COMPOSE up -d php django ember-caluma-portal ember-camac-ng document-merge-service
    - mkdir tarball
    # copy php to tarball
    - docker cp $(eval $COMPOSE ps -q php):/var/www/camac tarball/camac
    - cd tarball/camac
    # remove unused files for php
    - rm -rf kt_uri kt_schwyz demo media configuration php.* sessions 000-default.conf .prettier* .eslint* Dockerfile package.json yarn.lock RELEASE-NOTES.md
    - cd ../..
    # copy django to tarball
    - cp -r django tarball/django
    - cd tarball/django
    # remove unused files for django
    - rm -rf kt_uri kt_schwyz demo .coverage* .dockerignore Dockerfile
    - cd ../..
    # copy document-merge-service to tarball
    - mkdir -p tarball/document-merge-service/fixtures
    - docker cp $(eval $COMPOSE ps -q document-merge-service):/tmp/document-merge-service/dump.json tarball/document-merge-service/fixtures/
    - docker cp $(eval $COMPOSE ps -q document-merge-service):/var/lib/document-merge-service/media tarball/document-merge-service/templates
    # copy portal to tarball
    - mkdir -p tarball/ember-caluma-portal/dist
    - docker cp $(eval $COMPOSE ps -q ember-caluma-portal):/usr/share/nginx/html/. tarball/ember-caluma-portal/dist
    # copy ember camac ng to tarball
    - mkdir -p tarball/camac/public/ember
    - docker cp $(eval $COMPOSE ps -q ember-camac-ng):/usr/share/nginx/html/. tarball/camac/public/ember
    # build tarball
    - cd tarball
    - tar cfz "../camac-be-$(cat ../VERSION.txt)+${CI_COMMIT_SHORT_SHA}.tar.gz" .
    - cd ..
  artifacts:
    paths:
      - "camac-be-*.tar.gz"
    expire_in: 1 month

build-kt_bern-production:
  extends: .build-tarball
  variables:
    APPLICATION: kt_bern
    COMPOSE: docker-compose -f compose/kt_bern.yml -f compose/kt_bern-prod.yml
  only:
    - /^v\d+\.\d+\.\d+(-rc\d+)?$/
  except:
    - branches

.deploy:
  variables:
    DOCKER_TLS_VERIFY: 1
    # because of https://github.com/docker/compose/issues/2668 tls certs
    # need to be assigned as parameters - once fixed such params can be removed.
    TLSOPTS: --tlsverify --tlscert /root/.docker/cert.pem --tlskey /root/.docker/key.pem --tlscacert /root/.docker/ca.pem
    COMPOSE: docker-compose -f docker-compose.yml -f docker-compose.production.yml
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN acr.run
    - eval $COMPOSE $TLSOPTS pull
    - eval $COMPOSE $TLSOPTS up -d

deploy-kt_schwyz-stage:
  extends: .deploy
  environment:
    name: stage-kt_schwyz
    url: https://camac-schwyz.sycloud.ch/
  variables:
    APPLICATION: kt_schwyz
    DOCKER_HOST: vm-camac-webapp-stage-02.cust.adfinis-sygroup.ch:2376
    COMPOSE: docker-compose -f compose/kt_schwyz.yml -f compose/kt_schwyz-stage.yml
  only:
    - stage-sz

deploy-kt_schwyz-production:
  extends: deploy-kt_schwyz-stage
  environment:
    name: production-kt_schwyz
    url: https://behoerden.ebau-sz.ch/
  variables:
    DOCKER_HOST: vm-kantonsz-web-01.cust.adfinis-sygroup.ch:2376
    # TODO We should make kt_schwyz-prod.yml base on kt_schwyz.yml
    COMPOSE: docker-compose -f compose/kt_schwyz-prod.yml
  only:
    - production-sz
  when: manual

deploy-kt_uri-stage:
  extends: .deploy
  environment:
    name: stage-kt_uri
    url: https://camac-uri.sycloud.ch/
  variables:
    APPLICATION: kt_uri
    DOCKER_HOST: vm-camac-webapp-stage-01.cust.adfinis-sygroup.ch:2376
    COMPOSE: docker-compose -f compose/kt_uri.yml -f compose/kt_uri-stage.yml
  only:
    - stage-ur

deploy-kt_bern-production:
  stage: deploy
  image:
    name: instrumentisto/rsync-ssh
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${PUBLISH_SSH_PRIVATE_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
    - echo "${PUBLISH_SSH_PUBLIC_KEY}" > ~/.ssh/id_rsa.pub
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tUser ${PUBLISH_SSH_USERNAME}\n\tIdentityFile ~/.ssh/id_rsa" > ~/.ssh/config
    - echo "${PUBLISH_SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - rsync ./camac-be-$(cat VERSION.txt)+${CI_COMMIT_SHORT_SHA}.tar.gz ${PUBLISH_RSYNC_TARGET}
    - 'echo -e "camac_version: \"$(cat VERSION.txt)+${CI_COMMIT_SHORT_SHA}\"\ncamac_tarball_checksum: \"$(sha256sum ./camac-be-$(cat VERSION.txt)+${CI_COMMIT_SHORT_SHA}.tar.gz | cut -d " " -f 1)\"\n"'

  only:
    - /^v\d+\.\d+\.\d+(-rc\d+)?$/
  except:
    - branches
